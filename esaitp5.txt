1. Saya mengalokasikan waktu sekitar 8 jam untuk mengerjakan TP5. Sebelum mulai coding, saya membuat catatan scratch berisi rencana struktur program, daftar class, dan alur logika utama. Saya memastikan untuk berpikir sistematis, mulai dari memahami soal, membuat class diagram sederhana, lalu mengidentifikasi dependensi antar class. Setelah itu, saya mulai mengimplementasikan class satu per satu sesuai catatan, dan melakukan pengetesan setiap selesai satu bagian. Kesulitan utama yang saya hadapi adalah memastikan setiap class saling terhubung dengan benar, terutama saat menangani data persistence dan validasi input. Untuk mengatasinya, saya sering melakukan review ulang catatan dan mencoba menjalankan program secara bertahap untuk menemukan bug lebih awal.

2. Pada TP5, saya menerapkan polymorphism melalui interface seperti `Display`, `AdminService`, dan `CosmicService`. Dengan interface, saya bisa membuat beberapa class yang memiliki method dengan nama sama namun implementasi berbeda, misalnya `AdminDisplay` dan `CosmicDisplay` yang sama-sama mengimplementasikan `Display`. Selain itu, saya juga menggunakan polymorphism built-in Java seperti method overriding pada class turunan dari `User` (`Admin` dan `Cosmic`). Dengan cara ini, saya bisa memanggil method yang sama dari reference bertipe interface atau superclass, namun perilakunya sesuai dengan object aslinya.

3. Pada TP5, saya menggunakan exception untuk menangani kasus error seperti input kosong, user tidak ditemukan, atau kata yang dibatasi. Exception ditangkap dengan blok try-catch di setiap fitur yang berpotensi gagal, lalu menampilkan pesan error yang sesuai ke user tanpa menghentikan program. Dengan cara ini, program tetap berjalan meskipun terjadi exception, dan user bisa mencoba kembali tanpa perlu restart aplikasi.
